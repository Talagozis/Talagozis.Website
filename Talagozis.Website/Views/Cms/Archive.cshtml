@using System.Globalization
@using Talagozis.AspNetCore.Extensions
@using Talagozis.AspNetCore.Models.ViewModels.Html

@inject Piranha.IApi Api

@model Talagozis.Website.Models.ViewModels.ArchiveViewModel

@{
    Layout = "~/Views/Layout/Home.cshtml";
}

@{
    Model.htmlHead = new HtmlHeadViewModel
    {
        title = Model.blogArchive.Title,
        titleSuffix = "Talagozis",
        description = Model.blogArchive.MetaDescription,
        canonical = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Model.blogArchive.Permalink,
        ogTitle = Model.blogArchive.OgTitle,
        ogType = OgType.Website,
        ogUrl = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Model.blogArchive.Permalink,
        ogDescription = Model.blogArchive.OgDescription,
        ogImage = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Url.Content(Model.blogArchive.OgImage),
        ogSiteName = "Talagozis Christos Blog"
    };

    Model.htmlHeader = new HtmlHeaderViewModel
    {
        title = "Blog",
        breadcrumps = new List<Breadcrump>
        {
            new Breadcrump {text = "Home"},
            new Breadcrump {controller = "Home", action = "Blog", text = "Blog"},
            new Breadcrump {plainSlug = Model.blogArchive.Permalink, text = Model.blogArchive.Title}
        },
    };
}


@section css {
    <environment names="Development">
        <link rel="stylesheet" type="text/css" href="~/css/Cms/Archive.css" asp-append-version="true" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" type="text/css" href="~/css/Cms/Archive.min.css" asp-append-version="true" />
    </environment>
    <style>
        section.header-blog-post {
            background-image: url(@Url.Content((Model.blogArchive.Heading.CoverImage.HasValue ? Model.blogArchive.Heading.CoverImage : Model.blogArchive.Heading.PrimaryImage)));
            background-position: center;
            background-size: auto;
        }
    </style>
}

@section js { }

@{
    ViewBag.Title = Model.blogArchive.Title;

    Func<string> BlogLink = () => Model.blogArchive.Permalink
                                  + (Model.PostArchive.Category != null ? $"/category/{Model.PostArchive.Category.Slug}" : "")
                                  + (Model.PostArchive.Year.HasValue ? $"/{Model.PostArchive.Year}" : "")
                                  + (Model.PostArchive.Month.HasValue ? $"/{Model.PostArchive.Month}" : "");

    Func<string> MonthName = () => Model.PostArchive.Month.HasValue ? new DateTime(2018, Model.PostArchive.Month.Value, 1).ToString("MMMM", CultureInfo.InvariantCulture) : string.Empty;
}

<section class="header-blog-post active-nav row">
    <div class="overlay">
        <div class="container">
            <div class="row">
                <div class="col-12 herocontent">
                    <div class="title2">
                        <h1>@Model.blogArchive.Title</h1>
                    </div>
                    <div class="subtitle">
                        <h5>@Model.blogArchive.Heading.SubTitle</h5>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<section class="container page">
    
    @if (Model.PostArchive.Category != null)
    {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Category: @Model.PostArchive.Category.Title</h1>
            </div>
        </div>
        <hr />
    }
    else if (Model.PostArchive.Tag != null)
    {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Tag: @Model.PostArchive.Tag.Title</h1>
            </div>
        </div>
        <hr />
    }
    else if (Model.PostArchive.Year.HasValue)
    {
        <div class="row">
            <div class="col blog-filter-header">
                <h1>Posts from @MonthName = () @Model.PostArchive.Year</h1>
            </div>
        </div>
        <hr />
    }
    else
    {
        @*<div class="row">
            <div class="col blog-filter-header">
                <h1>Latest posts</h1>
            </div>
        </div>*@
    }


    @foreach (var post in Model.PostArchive.Posts)
    {
        <article class="post">
            <div class="inner-border">
                <header>
                    <div class="row ">
                        <div class="col-4 d-none d-md-block">
                            <a href="@post.Permalink">
                                @{ var img = post.Heading.PrimaryImage.HasValue ? post.Heading.PrimaryImage : Model.blogArchive.PostFallback.PrimaryImage;}
                                <img src="@Url.Content(img.Resize(Api, 310, 194))" style="width: 100%; max-width: 100%; max-height: 194px; object-fit: contain; ">
                            </a>
                        </div>
                        <div class="col-12 col-md-8">

                            <h2 class="post-title">
                                <a href="@post.Permalink">@post.Title</a>
                            </h2>

                            <p class="post-published">
                                <span>Published:</span>
                                <strong>@post.Published?.ToString("dd MMMM yyyy")</strong>
                            </p>

                            <p>
                                @Html.Raw(post.Heading.Ingress)
                            </p>
                            <p class="post-category">
                                <span>Category:</span>
                                <a href="@Model.blogArchive.Permalink/category/@post.Category.Slug">
                                    @post.Category.Title
                                </a>

                                @if (post.Tags.Any())
                                {
                                    <span class="sep">|</span>

                                    <span>Tags:</span>
                                    foreach (var tag in post.Tags)
                                    {
                                        <span class="tags-post" style="background-color: #019d9b; border-radius: 27px; padding: 2px 10px; margin-right: 4px; display: inline-block;">
                                            <i class="manisa-tag"></i>
                                            <span>
                                                <a href="@Model.blogArchive.Permalink/tag/@tag.Slug" style="color: white;">@tag.Title</a>
                                            </span>
                                        </span>
                                    }
                                }
                            </p>

                        </div>
                    </div>
                </header>
                <div class="row">
                    <div class="col-sm-10">
                        <div class="ingress">
                        </div>
                    </div>
                </div>
            </div>
        </article>
    }

    @if (Model.PostArchive.TotalPages > 1)
    {
        <div class="row">
            <div class="col-sm">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item">
                            <a class="page-link" href="@BlogLink = ()/page/1">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@BlogLink = ()/page/@Math.Max(1, Model.PostArchive.CurrentPage - 1)">
                                <span aria-hidden="true">&lsaquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                        @for (var n = 1; n <= Model.PostArchive.TotalPages; n++)
                        {
                            <li class="page-item @(Model.PostArchive.CurrentPage == n ? "active" : "")"><a class="page-link" href="@BlogLink = ()/page/@n">@n</a></li>
                        }
                        <li class="page-item">
                            <a class="page-link" href="@BlogLink = ()/page/@Math.Min(Model.PostArchive.TotalPages, Model.PostArchive.CurrentPage + 1)">
                                <span aria-hidden="true">&rsaquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@BlogLink = ()/page/@Model.PostArchive.TotalPages">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }

</section>
