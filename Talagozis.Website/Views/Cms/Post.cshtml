@using Talagozis.AspNetCore.Extensions
@using Talagozis.AspNetCore.Models.ViewModels.Html
@using Talagozis.Website.Models.ViewModels
@using Piranha.Models

@inject Piranha.IApi Api

@model PostViewModel

@{
    Layout = "~/Views/Layout/Home.cshtml";
}

@{
    Model.htmlHead = new HtmlHeadViewModel
    {
        title = Model.BlogPost.Title,
        titleSuffix = "Talagozis",
        description = Model.BlogPost.MetaDescription,
        canonical = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Model.BlogPost.Permalink,
        ogTitle = Model.BlogPost.OgTitle,
        ogType = OgType.Website,
        ogUrl = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Model.BlogPost.Permalink,
        ogDescription = Model.BlogPost.OgDescription,
        ogImage = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Url.Content(Model.blogArchive.OgImage),
        ogSiteName = "Talagozis Christos Blog",
        twitterCard = TwitterCard.SummaryLargeImage,
        twitterTitle = Model.BlogPost.Title,
        twitterDomain = Context.Request.getUrl().GetLeftPart(UriPartial.Authority),
        twitterDescription = Model.BlogPost.MetaDescription ?? Model.BlogPost.OgDescription,
        twitterUrl = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Model.BlogPost.Permalink,
        twitterSite = "Talagozis Christos Blog",
        twitterCreator = "Talagozis Christos",
        twitterImage = Context.Request.getUrl().GetLeftPart(UriPartial.Authority) + Url.Content(Model.blogArchive.OgImage),
        twitterLabels = new Dictionary<string, string>
{
            {"Category",  Model.BlogPost.Category.Title },
            {"Tags", string.Join(" ,", Model.BlogPost.Tags.Select(a => a.Title)) },
        }
    };

    Model.htmlHeader = new HtmlHeaderViewModel
    {
        title = "Blog",
        breadcrumps = new List<Breadcrump>
{
            new Breadcrump {text = "Home"},
            new Breadcrump {controller = "Home", action = "Blog", text = "Blog"},
            new Breadcrump {plainSlug = Model.blogArchive.Permalink, text = Model.blogArchive.Title},
            new Breadcrump {plainSlug = Model.BlogPost.Slug, text = Model.BlogPost.Title},
        },
    };
}



@section css {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/themes/prism-okaidia.min.css" rel="stylesheet" type="text/css">
    <environment names="Development">
        <link rel="stylesheet" type="text/css" href="~/css/Cms/Post.css" asp-append-version="true" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" type="text/css" href="~/css/Cms/Post.min.css" asp-append-version="true" />
    </environment>
    <style>
    </style>
}

@section js { }

<article>
    <header class="row">
        @if (Model.BlogPost.Heading.PrimaryImage.HasValue)
        {
            <div class="row justify-content-center">
                <div class="col-sm">
                    <img src="@Url.Content(Model.BlogPost.Heading.PrimaryImage.Resize(Api, 360, 270))">
                </div>
            </div>
        }
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 col-sm-10">

                    <div class="row justify-content-center">
                        <div class="col-12 col-sm-10">

                            <h1>@Model.BlogPost.Title</h1>
                            <div class="post-shortdescription">
                                <p>
                                    @Html.Raw(Model.BlogPost.Heading.SubTitle)
                                </p>
                            </div>

                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-12 col-sm-10">

                            <p class="pull-left grey">
                                <span class="">Category</span>
                                <a class="category-label" href="@Model.blogArchive.Permalink/category/@Model.BlogPost.Category.Slug">@Model.BlogPost.Category.Title</a>

                                @if (Model.BlogPost.Tags.Any())
                                {
                                    <span class="sep">|</span>

                                    <span>Tags:</span>
                                    foreach (var tag in Model.BlogPost.Tags)
                                    {
                                        <span class="tag">
                                            <a class="tag-label" href="@Model.blogArchive.Permalink/tag/@tag.Slug">@tag.Title</a>@(tag != Model.BlogPost.Tags.Last() ? ", " : "")
                                        </span>
                                    }
                                }
                            </p>
                            <p class="pull-right grey">
                                <span>Published:</span>
                                <strong class="date-value">
                                    @Model.BlogPost.Published?.ToString("dd MMMM yyyy")
                                </strong>
                            </p>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </header>

    <section class="row post">

        <div class="col-12  order-sm-2 col-sm-3 sidebar">

            <div>
                <h3>Read this post in</h3>
                <ul class="list-unstyled">
                    @foreach (var language in Model.CultureRelatedBlogPosts.OrderBy(a => a.Key.TwoLetterISOLanguageName))
                    {
                        <li class="label label-cyan">
                            <strong style="font-size: 0.95rem;">
                                <a href="@language.Value.Permalink">
                                    @language.Key.EnglishName @(!Equals(language.Key.EnglishName, language.Key.NativeName) ? $"({language.Key.NativeName})" : string.Empty)
                                </a>
                            </strong>
                        </li>
                    }
                </ul>
            </div>

            @{ var categories = Model.PostArchive.Posts.Select(a => a.Category).GroupBy(a => a.Id).Select(a => a.First()).ToList(); }
            @if (categories.Any())
            {
                <div>
                    <h3>Categories in this page</h3>
                    <ul class="list-unstyled">
                        @foreach (var category in categories)
                        {
                            <li class="label label-default">
                                <a href="@Model.blogArchive.Permalink/category/@category.Slug">@category.Title</a>
                            </li>
                        }
                    </ul>
                </div>
            }
            
            @{ var tags = Model.PostArchive.Posts.SelectMany(a => a.Tags).GroupBy(a => a.Id).Select(a => a.First()).ToList(); }
            @if (tags.Any())
            {
                <div>
                    <h3>Tags in this page</h3>
                    <ul class="list-unstyled">
                            @foreach (var tag in tags)
                            {
                                <li class="label label-default">
                                    <a href="@Model.blogArchive.Permalink/tag/@tag.Slug">@tag.Title</a>
                                </li>
                            }
                    </ul>
                </div>
            }

        </div>

        <div class="col-12 order-sm-1 col-sm-9 body">
            @Html.DisplayFor(m => m.BlogPost.Blocks)
        </div>

    </section>

</article>
